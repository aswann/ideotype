name: Tests
on: [push, pull_request]

jobs:
  tests:
    env:
      ENV_NAME: ideotype_test
      PYTHON: ${{ matrix.python-version }}
    name: Testing
    runs-on: ubuntu-latest
    defaults:
      run:
        # Adding -l {0} helps ensure conda can be found properly.
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.0.0
        with:
          auto-update-conda: true
          miniconda-version: "latest"
          python-version: ${{ env.PYTHON }}
          environment-file: ci/${{ env.ENV_NAME }}.yml
          activate-environment: ${{ env.ENV_NAME }}

      - name: Conda Info
        run: |
          conda info -a
          conda list
          PYVER=`python -c "import sys; print('{:d}.{:d}'.format(sys.version_info.major, sys.version_info.minor))"`
          if [[ $PYVER != ${{ env.PYTHON }} ]]; then
            exit 1;
          fi
      - name: Install
        run: |
          pip install .
      - name: Run Tests
        run: |
          python -m pytest --cov=ideotype --cov-config=.coveragerc --cov-report xml:./coverage.xml --junitxml=test-reports/xunit.xml
      - uses: codecov/codecov-action@master
        #if: success()
        with:
          token: ${{secrets.CODECOV_TOKEN}} #required
          file: ./coverage.xml #optional